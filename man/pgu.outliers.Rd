% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pguOutliers.R
\name{pgu.outliers}
\alias{pgu.outliers}
\title{pgu.outliers}
\format{
\link[R6:R6Class]{R6::R6Class} object.
}
\description{
Detects and replaces possible outliers from data set.
}
\details{
Performes Grubb's test for outliers to detect outliers in the normalized and Z-score transfromed data set.
Replace missing values with substitutes by classical and AI-powerd substitution algorithms.
For this purpose outliers are handled as imputation sites.
}
\section{Construction}{

x <- pguIMP::pgu.outliers$new(data)
}

\examples{

## ------------------------------------------------
## Method `pgu.outliers$new`
## ------------------------------------------------

y <- tibble:tibble()
x <- pguIMP:pgu.outliers$new(data = y)

## ------------------------------------------------
## Method `pgu.outliers$print`
## ------------------------------------------------

x$print()
print(x)

## ------------------------------------------------
## Method `pgu.outliers$resetOutliersParameter`
## ------------------------------------------------

x$resetOutliersParameter(data, progress)

## ------------------------------------------------
## Method `pgu.outliers$filterFeatures`
## ------------------------------------------------

matrix <- x$filterFeatures(data)

## ------------------------------------------------
## Method `pgu.outliers$outliersIdxByFeature`
## ------------------------------------------------

idx <- x$outliersIdxByFeature(featureName = "infected")

## ------------------------------------------------
## Method `pgu.outliers$outliersFeatureList`
## ------------------------------------------------

idx <- x$outliersFeatureList(data)

## ------------------------------------------------
## Method `pgu.outliers$runGrubbs`
## ------------------------------------------------

y <- x$runGrubbs(data, feature = "infected")

## ------------------------------------------------
## Method `pgu.outliers$findOutliers`
## ------------------------------------------------

x$findOutliers(data, progress)

## ------------------------------------------------
## Method `pgu.outliers$outlierStatistics`
## ------------------------------------------------

x$outlierStatistics(data)

## ------------------------------------------------
## Method `pgu.outliers$insertImputationSites`
## ------------------------------------------------

x$insertImputationSites(data)

## ------------------------------------------------
## Method `pgu.outliers$handleOutliers`
## ------------------------------------------------

x$handleOutliers(data, progress)

## ------------------------------------------------
## Method `pgu.outliers$cleanByMedian`
## ------------------------------------------------

x$cleanByMedian(data, progress)

## ------------------------------------------------
## Method `pgu.outliers$cleanByMean`
## ------------------------------------------------

x$cleanByMean(data, progress)

## ------------------------------------------------
## Method `pgu.outliers$cleanByExpectationValue`
## ------------------------------------------------

x$cleanByExpectationValue(data, progress)

## ------------------------------------------------
## Method `pgu.outliers$cleanByMC`
## ------------------------------------------------

x$cleanByMC(data, progress)

## ------------------------------------------------
## Method `pgu.outliers$cleanByKnn`
## ------------------------------------------------

x$cleanByKnn(data, progress)

## ------------------------------------------------
## Method `pgu.outliers$cleanByMice`
## ------------------------------------------------

x$cleanByMice(data, progress)

## ------------------------------------------------
## Method `pgu.outliers$cleanByM5P`
## ------------------------------------------------

x$cleanByM5P(data, progress)

## ------------------------------------------------
## Method `pgu.outliers$cleanByAmelia`
## ------------------------------------------------

x$cleanByAmelia(data, progress)

## ------------------------------------------------
## Method `pgu.outliers$cleanByAmeliaBound`
## ------------------------------------------------

x$cleanByAmeliaBound(data, progress)

## ------------------------------------------------
## Method `pgu.outliers$dataTable`
## ------------------------------------------------

data \%>\%
 x$dataTable() \%>\%
 print()

## ------------------------------------------------
## Method `pgu.outliers$outlierTable`
## ------------------------------------------------

data \%>\%
 x$outlierTable() \%>\%
 print()

## ------------------------------------------------
## Method `pgu.outliers$plotOutliersDistribution`
## ------------------------------------------------

x$plotOutliersDistribution() \%>\%
 show()

## ------------------------------------------------
## Method `pgu.outliers$featureBarPlot`
## ------------------------------------------------

x$featureBarPlot() \%>\%
 show()

## ------------------------------------------------
## Method `pgu.outliers$featureBoxPlotWithSubset`
## ------------------------------------------------

x$featureBoxPlotWithSubset() \%>\%
 show()

## ------------------------------------------------
## Method `pgu.outliers$featurePlot`
## ------------------------------------------------

x$featurePlot() \%>\%
 show()
}
\author{
Sebastian Malkusch, \email{malkusch@med.uni-frankfurt.de}
}
\section{Active bindings}{
\if{html}{\out{<div class="r6-active-bindings">}}
\describe{
\item{\code{outliersParameter}}{Returns the instance variable outliersParameter.
(tibble::tibble)}

\item{\code{outliers}}{Returns the instance variable outliers.
(tibble::tibble)}

\item{\code{cleaningAgentAlphabet}}{Returns the instance variable cleaningAlphabet.
(character)}

\item{\code{cleaningAgent}}{Returns the instance variable cleaningAgent.
(character)}

\item{\code{setCleaningAgent}}{Sets the instance variable cleaningParameter.
(character)}

\item{\code{seed}}{Returns the instance variable seed.
(numeric)}

\item{\code{setSeed}}{Sets the instance variable seed.
(numeric)}

\item{\code{iterations}}{Returns the instance variable iterations.
(numeric)}

\item{\code{setIterations}}{Sets the instance variable iterations.
(numeric)}

\item{\code{featureData}}{Returns the instance variable featureData.
(numeric)}

\item{\code{alpha}}{Returns the instance variable alpha.
(numeric)}

\item{\code{setAlpha}}{Set the instance variable alpha.
(numeric)}

\item{\code{minSamples}}{Returns the instance variable minSamples.
(numeric)}

\item{\code{outliersStatistics}}{Returns the instance variable outliersStatistics.
(tibble::tibble)}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{pgu.outliers$new()}}
\item \href{#method-finalize}{\code{pgu.outliers$finalize()}}
\item \href{#method-print}{\code{pgu.outliers$print()}}
\item \href{#method-resetOutliersParameter}{\code{pgu.outliers$resetOutliersParameter()}}
\item \href{#method-filterFeatures}{\code{pgu.outliers$filterFeatures()}}
\item \href{#method-outliersIdxByFeature}{\code{pgu.outliers$outliersIdxByFeature()}}
\item \href{#method-outliersFeatureList}{\code{pgu.outliers$outliersFeatureList()}}
\item \href{#method-runGrubbs}{\code{pgu.outliers$runGrubbs()}}
\item \href{#method-findOutliers}{\code{pgu.outliers$findOutliers()}}
\item \href{#method-outlierStatistics}{\code{pgu.outliers$outlierStatistics()}}
\item \href{#method-insertImputationSites}{\code{pgu.outliers$insertImputationSites()}}
\item \href{#method-handleOutliers}{\code{pgu.outliers$handleOutliers()}}
\item \href{#method-cleanByMedian}{\code{pgu.outliers$cleanByMedian()}}
\item \href{#method-cleanByMean}{\code{pgu.outliers$cleanByMean()}}
\item \href{#method-cleanByExpectationValue}{\code{pgu.outliers$cleanByExpectationValue()}}
\item \href{#method-cleanByMC}{\code{pgu.outliers$cleanByMC()}}
\item \href{#method-cleanByKnn}{\code{pgu.outliers$cleanByKnn()}}
\item \href{#method-cleanByMice}{\code{pgu.outliers$cleanByMice()}}
\item \href{#method-cleanByM5P}{\code{pgu.outliers$cleanByM5P()}}
\item \href{#method-cleanByAmelia}{\code{pgu.outliers$cleanByAmelia()}}
\item \href{#method-cleanByAmeliaBound}{\code{pgu.outliers$cleanByAmeliaBound()}}
\item \href{#method-dataTable}{\code{pgu.outliers$dataTable()}}
\item \href{#method-outlierTable}{\code{pgu.outliers$outlierTable()}}
\item \href{#method-plotOutliersDistribution}{\code{pgu.outliers$plotOutliersDistribution()}}
\item \href{#method-featureBarPlot}{\code{pgu.outliers$featureBarPlot()}}
\item \href{#method-featureBoxPlotWithSubset}{\code{pgu.outliers$featureBoxPlotWithSubset()}}
\item \href{#method-featurePlot}{\code{pgu.outliers$featurePlot()}}
\item \href{#method-clone}{\code{pgu.outliers$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
Creates and returns a new \code{pgu.outliers} object.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{pgu.outliers$new(data = "tbl_df")}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data}}{The data to be cleaned.
(tibble::tibble)}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A new \code{pgu.outliers} object.
(pguIMP::pgu.outliers)
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{y <- tibble:tibble()
x <- pguIMP:pgu.outliers$new(data = y)
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-finalize"></a>}}
\if{latex}{\out{\hypertarget{method-finalize}{}}}
\subsection{Method \code{finalize()}}{
Clears the heap and
indicates that instance of \code{pgu.outliers} is removed from heap.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{pgu.outliers$finalize()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-print"></a>}}
\if{latex}{\out{\hypertarget{method-print}{}}}
\subsection{Method \code{print()}}{
Prints instance variables of a \code{pgu.outliers} object.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{pgu.outliers$print()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
string
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{x$print()
print(x)
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-resetOutliersParameter"></a>}}
\if{latex}{\out{\hypertarget{method-resetOutliersParameter}{}}}
\subsection{Method \code{resetOutliersParameter()}}{
Resets instance variables and
performes Grubb's test for outliers to detect outliers in the normalized and Z-score transfromed data set.
Progresse is indicated by the progress object passed to the function.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{pgu.outliers$resetOutliersParameter(data = "tbl_df", progress = "Progress")}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data}}{Dataframe to be analyzed.
(tibble::tibble)}

\item{\code{progress}}{Keeps track of the analysis progress.
(shiny::Progress)}
}
\if{html}{\out{</div>}}
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{x$resetOutliersParameter(data, progress)
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-filterFeatures"></a>}}
\if{latex}{\out{\hypertarget{method-filterFeatures}{}}}
\subsection{Method \code{filterFeatures()}}{
Filters attributes from the given dataframe that are known to the class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{pgu.outliers$filterFeatures(data = "tbl_df")}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data}}{Dataframe to be filtered.
(tibble::tibble)}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A filterd dataframe.
(tibble::tibble)
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{matrix <- x$filterFeatures(data)
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-outliersIdxByFeature"></a>}}
\if{latex}{\out{\hypertarget{method-outliersIdxByFeature}{}}}
\subsection{Method \code{outliersIdxByFeature()}}{
Returns the position of an attribute's outliers within a data frame.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{pgu.outliers$outliersIdxByFeature(featureName = "character")}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{featureName}}{The attribute's name.
(character)}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
The postion of entries identified as outliers.
(numeric)
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{idx <- x$outliersIdxByFeature(featureName = "infected")
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-outliersFeatureList"></a>}}
\if{latex}{\out{\hypertarget{method-outliersFeatureList}{}}}
\subsection{Method \code{outliersFeatureList()}}{
Characterizes each row of the data frame as either \code{complete}
or indicates which attribute has been identified as an outlier within the row.
If multiple attributes' row entries were identified as outliers, the row is characterized by \code{multiple}.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{pgu.outliers$outliersFeatureList(data = "tbl_df")}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data}}{The data frame to be analyzed.
(tibble::tibble)}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Vector of row characteristics.
(character)
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{idx <- x$outliersFeatureList(data)
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-runGrubbs"></a>}}
\if{latex}{\out{\hypertarget{method-runGrubbs}{}}}
\subsection{Method \code{runGrubbs()}}{
Performes Grubb's test for outliers to detect a single outlier in the provided attributes data.
If an outlier is found, it is written to the instance variable \code{outliers}.
The function indicates a find by a positive feedback.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{pgu.outliers$runGrubbs(data = "tbl_df", feature = "character")}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data}}{The data frame to be analyzed.
(tibble::tibble)}

\item{\code{feature}}{The attribute within the data frame to be analyzed.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Feedback if an outlier was found.
(logical)
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{y <- x$runGrubbs(data, feature = "infected")
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-findOutliers"></a>}}
\if{latex}{\out{\hypertarget{method-findOutliers}{}}}
\subsection{Method \code{findOutliers()}}{
Performes Grubb's test for outliers ontil all outliers in the dataframe are identified.
Displays the progress if shiny is loaded.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{pgu.outliers$findOutliers(data = "tbl_df", progress = "Progress")}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data}}{The data frame to be analyzed.
(tibble::tibble)}

\item{\code{progress}}{If shiny is loaded, the analysis' progress is stored within this instance of the shiny Progress class.
(shiny::Progress)}
}
\if{html}{\out{</div>}}
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{x$findOutliers(data, progress)
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-outlierStatistics"></a>}}
\if{latex}{\out{\hypertarget{method-outlierStatistics}{}}}
\subsection{Method \code{outlierStatistics()}}{
Calculates the statistics on the previously performed outlier detection analysis
and stores the results in the instance variable \code{outliersStatistcs}.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{pgu.outliers$outlierStatistics(data = "tbl_df")}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data}}{The data frame to be analyzed.
(tibble::tibble)}
}
\if{html}{\out{</div>}}
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{x$outlierStatistics(data)
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-insertImputationSites"></a>}}
\if{latex}{\out{\hypertarget{method-insertImputationSites}{}}}
\subsection{Method \code{insertImputationSites()}}{
Includes imputation sites into the data frame.
Outliers are replaces by NA.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{pgu.outliers$insertImputationSites(data = "tbl_df")}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data}}{The data frame to be analyzed.
(tibble::tibble)}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Returns a data frame with outliers replaced by NA.
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{x$insertImputationSites(data)
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-handleOutliers"></a>}}
\if{latex}{\out{\hypertarget{method-handleOutliers}{}}}
\subsection{Method \code{handleOutliers()}}{
Chooseses a cleaning method based upon the instance variable \code{cleaningAgent} and handles the imputation sites in the dataframe.
Returns a cleaned data set.
Display the progress if shiny is loaded.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{pgu.outliers$handleOutliers(data = "tbl_df", progress = "Progress")}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data}}{The data frame to be analyzed.
(tibble::tibble)}

\item{\code{progress}}{If shiny is loaded, the analysis' progress is stored within this instance of the shiny Progress class.
(shiny::Progress)}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Cleaned dataframe.
(tibble:tibble)
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{x$handleOutliers(data, progress)
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-cleanByMedian"></a>}}
\if{latex}{\out{\hypertarget{method-cleanByMedian}{}}}
\subsection{Method \code{cleanByMedian()}}{
Substitutes imputation sites by the median of the respective attribute.
Returns the cleaned dataframe.
Display the progress if shiny is loaded.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{pgu.outliers$cleanByMedian(data = "tbl_df", progress = "Progress")}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data}}{The data frame to be analyzed.
(tibble::tibble)}

\item{\code{progress}}{If shiny is loaded, the analysis' progress is stored in this instance of the shiny Progress class.
(shiny::Progress)}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Cleaned dataframe.
(tibble:tibble)
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{x$cleanByMedian(data, progress)
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-cleanByMean"></a>}}
\if{latex}{\out{\hypertarget{method-cleanByMean}{}}}
\subsection{Method \code{cleanByMean()}}{
Substitutes imputation sites by the aritmertic mean of the respective attribute.
Returns the cleaned dataframe.
Display the progress if shiny is loaded.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{pgu.outliers$cleanByMean(data = "tbl_df", progress = "Progress")}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data}}{The data frame to be analyzed.
(tibble::tibble)}

\item{\code{progress}}{If shiny is loaded, the analysis' progress is stored in this instance of the shiny Progress class.
(shiny::Progress)}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Cleaned dataframe.
(tibble:tibble)
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{x$cleanByMean(data, progress)
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-cleanByExpectationValue"></a>}}
\if{latex}{\out{\hypertarget{method-cleanByExpectationValue}{}}}
\subsection{Method \code{cleanByExpectationValue()}}{
Substitutes imputation sites by the expectation value of the respective attribute.
Returns the cleaned dataframe.
Display the progress if shiny is loaded.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{pgu.outliers$cleanByExpectationValue(data = "tbl_df", progress = "Progress")}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data}}{The data frame to be analyzed.
(tibble::tibble)}

\item{\code{progress}}{If shiny is loaded, the analysis' progress is stored in this instance of the shiny Progress class.
(shiny::Progress)}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Cleaned dataframe.
(tibble:tibble)
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{x$cleanByExpectationValue(data, progress)
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-cleanByMC"></a>}}
\if{latex}{\out{\hypertarget{method-cleanByMC}{}}}
\subsection{Method \code{cleanByMC()}}{
Substitutes imputation sites by values generated by a monte carlo simulation.
The procedure runs several times as defined by the instance variable \code{iterations}.
The run with the best result is identified and used for substitution.
Returns the cleaned dataframe.
Display the progress if shiny is loaded.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{pgu.outliers$cleanByMC(data = "tbl_df", progress = "Progress")}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data}}{The data frame to be analyzed.
(tibble::tibble)}

\item{\code{progress}}{If shiny is loaded, the analysis' progress is stored in this instance of the shiny Progress class.
(shiny::Progress)}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Cleaned dataframe.
(tibble:tibble)
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{x$cleanByMC(data, progress)
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-cleanByKnn"></a>}}
\if{latex}{\out{\hypertarget{method-cleanByKnn}{}}}
\subsection{Method \code{cleanByKnn()}}{
Substitutes imputation sites by predictions of a KNN analysis of the whole dataframe.
Returns the cleaned dataframe.
Display the progress if shiny is loaded.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{pgu.outliers$cleanByKnn(data = "tbl_df", progress = "Progress")}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data}}{The data frame to be analyzed.
(tibble::tibble)}

\item{\code{progress}}{If shiny is loaded, the analysis' progress is stored in this instance of the shiny Progress class.
(shiny::Progress)}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Cleaned dataframe.
(tibble:tibble)
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{x$cleanByKnn(data, progress)
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-cleanByMice"></a>}}
\if{latex}{\out{\hypertarget{method-cleanByMice}{}}}
\subsection{Method \code{cleanByMice()}}{
Substitutes imputation sites by values generated by a different methods of the mice package.
The procedure runs several times as defined by the instance variable \code{iterations}.
The run with the best result is identified and used for substitution.
Returns the cleaned dataframe.
Display the progress if shiny is loaded.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{pgu.outliers$cleanByMice(data, method = "character", progress = "Progress")}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data}}{The data frame to be analyzed.
(tibble::tibble)}

\item{\code{method}}{One of the methods supported by the mice package.
(character)}

\item{\code{progress}}{If shiny is loaded, the analysis' progress is stored in this instance of the shiny Progress class.
(shiny::Progress)}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Cleaned dataframe.
(tibble:tibble)
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{x$cleanByMice(data, progress)
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-cleanByM5P"></a>}}
\if{latex}{\out{\hypertarget{method-cleanByM5P}{}}}
\subsection{Method \code{cleanByM5P()}}{
Substitutes imputation sites by predictions of a M5P tree trained on the whole dataframe.
Returns the cleaned dataframe.
Display the progress if shiny is loaded.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{pgu.outliers$cleanByM5P(data = "tl_df", progress = "Progress")}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data}}{The data frame to be analyzed.
(tibble::tibble)}

\item{\code{progress}}{If shiny is loaded, the analysis' progress is stored in this instance of the shiny Progress class.
(shiny::Progress)}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Cleaned dataframe.
(tibble:tibble)
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{x$cleanByM5P(data, progress)
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-cleanByAmelia"></a>}}
\if{latex}{\out{\hypertarget{method-cleanByAmelia}{}}}
\subsection{Method \code{cleanByAmelia()}}{
Substitutes imputation sites by values generated by a different methods of the amelia package.
The procedure is run without bound information.
Returns the cleaned dataframe.
Display the progress if shiny is loaded.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{pgu.outliers$cleanByAmelia(data = "tbl_df", progress = "Progress")}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data}}{The data frame to be analyzed.
(tibble::tibble)}

\item{\code{progress}}{If shiny is loaded, the analysis' progress is stored in this instance of the shiny Progress class.
(shiny::Progress)}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Cleaned dataframe.
(tibble:tibble)
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{x$cleanByAmelia(data, progress)
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-cleanByAmeliaBound"></a>}}
\if{latex}{\out{\hypertarget{method-cleanByAmeliaBound}{}}}
\subsection{Method \code{cleanByAmeliaBound()}}{
Substitutes imputation sites by values generated by a different methods of the amelia package.
The procedure is run with bound information.
Returns the cleaned dataframe.
Display the progress if shiny is loaded.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{pgu.outliers$cleanByAmeliaBound(data = "tbl_df", progress = "Progress")}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data}}{The data frame to be analyzed.
(tibble::tibble)}

\item{\code{progress}}{If shiny is loaded, the analysis' progress is stored in this instance of the shiny Progress class.
(shiny::Progress)}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Cleaned dataframe.
(tibble:tibble)
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{x$cleanByAmeliaBound(data, progress)
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-dataTable"></a>}}
\if{latex}{\out{\hypertarget{method-dataTable}{}}}
\subsection{Method \code{dataTable()}}{
Creates a datatable with outliers highlightes by colored background.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{pgu.outliers$dataTable(data = "tbl_df")}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data}}{The data frame to be analyzed.
(tibble::tibble)}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Al colored datatable
(DT::datatable)
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{data \%>\%
 x$dataTable() \%>\%
 print()
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-outlierTable"></a>}}
\if{latex}{\out{\hypertarget{method-outlierTable}{}}}
\subsection{Method \code{outlierTable()}}{
Creates a datatable with substituted outliers highlightes by colored background.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{pgu.outliers$outlierTable(data = "tbl_df")}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data}}{The data frame to be analyzed.
(tibble::tibble)}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Al colored datatable
(DT::datatable)
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{data \%>\%
 x$outlierTable() \%>\%
 print()
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-plotOutliersDistribution"></a>}}
\if{latex}{\out{\hypertarget{method-plotOutliersDistribution}{}}}
\subsection{Method \code{plotOutliersDistribution()}}{
Displays the occurrence of outlier candidates per attribute as bar plot.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{pgu.outliers$plotOutliersDistribution()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A bar plot.
(ggplot2::ggplot)
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{x$plotOutliersDistribution() \%>\%
 show()
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-featureBarPlot"></a>}}
\if{latex}{\out{\hypertarget{method-featureBarPlot}{}}}
\subsection{Method \code{featureBarPlot()}}{
Displays the distribution of an attribute as histogram.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{pgu.outliers$featureBarPlot(data = "tbl_df", feature = "character")}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data}}{dataframe to be analyzed.
(tibble::tibble)}

\item{\code{feature}}{attribute to be shown.
(character)}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A histogram.
(ggplot2::ggplot)
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{x$featureBarPlot() \%>\%
 show()
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-featureBoxPlotWithSubset"></a>}}
\if{latex}{\out{\hypertarget{method-featureBoxPlotWithSubset}{}}}
\subsection{Method \code{featureBoxPlotWithSubset()}}{
Displays the distribution of an attribute as box plot.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{pgu.outliers$featureBoxPlotWithSubset(data = "tbl_df", feature = "character")}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data}}{dataframe to be analyzed.
(tibble::tibble)}

\item{\code{feature}}{attribute to be shown.
(character)}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A box plot.
(ggplot2::ggplot)
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{x$featureBoxPlotWithSubset() \%>\%
 show()
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-featurePlot"></a>}}
\if{latex}{\out{\hypertarget{method-featurePlot}{}}}
\subsection{Method \code{featurePlot()}}{
Displays the distribution of an attribute as a composition of a box plot and a histogram.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{pgu.outliers$featurePlot(data = "tbl_df", feature = "character")}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data}}{dataframe to be analyzed.
(tibble::tibble)}

\item{\code{feature}}{attribute to be shown.
(character)}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A composite plot.
(ggplot2::ggplot)
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{x$featurePlot() \%>\%
 show()
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{pgu.outliers$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
