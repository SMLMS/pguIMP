% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pguFile.R
\name{pgu.file}
\alias{pgu.file}
\title{pgu.fie}
\format{
\link[R6:R6Class]{R6::R6Class} object.
}
\description{
Handles file names
}
\details{
Menages the file names and upload specifications for the pguIMP dataset.
}
\section{Construction}{

x <- pguIMP::pgu.file$new()
}

\examples{

## ------------------------------------------------
## Method `pgu.file$new`
## ------------------------------------------------

x <- pguIMP:pgu.file$new()

## ------------------------------------------------
## Method `pgu.file$print`
## ------------------------------------------------

x$print()
print(x)

## ------------------------------------------------
## Method `pgu.file$splitFileName`
## ------------------------------------------------

x$splitFileName()

## ------------------------------------------------
## Method `pgu.file$updateTimeString`
## ------------------------------------------------

x$updateTimeString()

## ------------------------------------------------
## Method `pgu.file$mergeFileName`
## ------------------------------------------------

x$mergeFileName()

## ------------------------------------------------
## Method `pgu.file$bluntFileName`
## ------------------------------------------------

x$bluntFileName(value = "infected")

## ------------------------------------------------
## Method `pgu.file$exportFileName`
## ------------------------------------------------

x$exportFileName(value = "infected")
}
\author{
Sebastian Malkusch, \email{malkusch@med.uni-frankfurt.de}
}
\section{Active bindings}{
\if{html}{\out{<div class="r6-active-bindings">}}
\describe{
\item{\code{uploadFileName}}{Returns the instance variable uploadFileName
(character)}

\item{\code{setUploadFileName}}{Sets the instance variable uploadFileName
(character)}

\item{\code{fileName}}{Returns the instance variable fileName
(character)}

\item{\code{setFileName}}{Sets the instance variable fileName
(character)}

\item{\code{baseName}}{Returns the instance variable baseName
(character)}

\item{\code{setBaseName}}{Sets the instance variable baseName
(character)}

\item{\code{folderName}}{Returns the instance variable folderName
(character)}

\item{\code{setFolderName}}{Sets the instance variable folderName
(character)}

\item{\code{suffix}}{Returns the instance variable suffix
(character)}

\item{\code{setSuffix}}{Sets the instance variable suffix
(character)}

\item{\code{exportType}}{Returns the instance variable exportType
(character)}

\item{\code{setExportType}}{Sets the instance variable exportType
(character)}

\item{\code{timeString}}{Returns the instance variable timeString
(character)}

\item{\code{sheetIndex}}{Returns the instance variable sheetIndex
(numeric)}

\item{\code{setSheetIndex}}{Sets the instance variable sheetIndex
(numeric)}

\item{\code{dataSheet}}{Returns the instance variable dataSheet
(character)}

\item{\code{setDataSheet}}{Sets the instance variable dataSheet
(character)}

\item{\code{loqSheet}}{Returns the instance variable loqSheet
(character)}

\item{\code{setLoqSheet}}{Sets the instance variable loqSheet
(character)}

\item{\code{metadataSheet}}{Returns the instance variable metadataSheet
(character)}

\item{\code{setMetadataSheet}}{Sets the instance variable metadataSheet
(character)}

\item{\code{separator}}{Returns the instance variable separator
(character)}

\item{\code{setSeparator}}{Sets the instance variable separator
(character)}

\item{\code{skipRows}}{Returns the instance variable skipRows
(numeric)}

\item{\code{setSkipRows}}{Sets the instance variable skipRows
(numeric)}

\item{\code{header}}{Returns the instance variable header
(logical)}

\item{\code{setHeader}}{Sets the instance variable header
(logical)}

\item{\code{naChar}}{Returns the instance variable naChar
(character)}

\item{\code{setNaChar}}{Sets the instance variable naChar
(character)}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{pgu.file$new()}}
\item \href{#method-finalize}{\code{pgu.file$finalize()}}
\item \href{#method-print}{\code{pgu.file$print()}}
\item \href{#method-splitFileName}{\code{pgu.file$splitFileName()}}
\item \href{#method-updateTimeString}{\code{pgu.file$updateTimeString()}}
\item \href{#method-mergeFileName}{\code{pgu.file$mergeFileName()}}
\item \href{#method-bluntFileName}{\code{pgu.file$bluntFileName()}}
\item \href{#method-exportFileName}{\code{pgu.file$exportFileName()}}
\item \href{#method-clone}{\code{pgu.file$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
Creates and returns a new \code{pgu.file} object.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{pgu.file$new()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A new \code{pgu.file} object.
(pguIMP::pgu.importer)
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{x <- pguIMP:pgu.file$new()
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-finalize"></a>}}
\if{latex}{\out{\hypertarget{method-finalize}{}}}
\subsection{Method \code{finalize()}}{
Clears the heap and
indicates that instance of \code{pgu.file} is removed from heap.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{pgu.file$finalize()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-print"></a>}}
\if{latex}{\out{\hypertarget{method-print}{}}}
\subsection{Method \code{print()}}{
Prints instance variables of a \code{pgu.file} object.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{pgu.file$print()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
string
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{x$print()
print(x)
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-splitFileName"></a>}}
\if{latex}{\out{\hypertarget{method-splitFileName}{}}}
\subsection{Method \code{splitFileName()}}{
Splits fileName and writes the results in the class' instance variables
folderName, baseName, suffix.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{pgu.file$splitFileName()}\if{html}{\out{</div>}}
}

\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{x$splitFileName()
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-updateTimeString"></a>}}
\if{latex}{\out{\hypertarget{method-updateTimeString}{}}}
\subsection{Method \code{updateTimeString()}}{
Gets the current system time and
stores it into the class' instance variable timeString.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{pgu.file$updateTimeString()}\if{html}{\out{</div>}}
}

\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{x$updateTimeString()
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-mergeFileName"></a>}}
\if{latex}{\out{\hypertarget{method-mergeFileName}{}}}
\subsection{Method \code{mergeFileName()}}{
Updates the class' instance variable fileName
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{pgu.file$mergeFileName()}\if{html}{\out{</div>}}
}

\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{x$mergeFileName()
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-bluntFileName"></a>}}
\if{latex}{\out{\hypertarget{method-bluntFileName}{}}}
\subsection{Method \code{bluntFileName()}}{
Returns an updated fileName without suffix.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{pgu.file$bluntFileName(value = "character")}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{value}}{user defined file name extension
(character)}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
blunt file name without suffix
(character)
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{x$bluntFileName(value = "infected")
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-exportFileName"></a>}}
\if{latex}{\out{\hypertarget{method-exportFileName}{}}}
\subsection{Method \code{exportFileName()}}{
Returns an export file name
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{pgu.file$exportFileName()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
export fileName
(character)
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{x$exportFileName(value = "infected")
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{pgu.file$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
